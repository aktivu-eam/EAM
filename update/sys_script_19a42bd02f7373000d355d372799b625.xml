<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_392987_eam_purchase_order_line_item</collection>
        <condition>current.status.changesTo('canceled') || current.status.changesTo('received') || current.status.changesTo('pending')</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Handle roll up states and assets removal</name>
        <order>200</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[function onAfter(current, previous) {
   //This function will be automatically called when this rule is processed.
	if(current.status.changesTo('pending'))
		rollupPending();
	
	checkPOLines();
}
function rollupPending() {
	var pol = new GlideRecord('x_392987_eam_purchase_order_line_item');
	pol.addQuery('purchase_order', current.purchase_order);
	pol.query();
	while(pol.next()) {
		if (pol.status == 'pending' || pol.status == 'canceled' || pol.status == 'received')
			continue;
		// if any states other than the ones mentioned exist, don't rollup
		return;
	}
	var po = new GlideRecord('x_392987_eam_purchase_order');
	po.get(current.purchase_order);
	po.status = 'pending';
	po.update();
}



//Cancels or received Purchase order, if all the line items has been cancelled
function checkPOLines() {
	if(!checkCancelledPOLines()) {
		checkReceivedPOLines();
	}
}

//Cancels Purchase order, if all the line items has been cancelled
function checkCancelledPOLines() {
	var hasMoreActiveLines = false;
	var polRecord = new GlideRecord('x_392987_eam_purchase_order_line_item');
	
	polRecord.addQuery('purchase_order', current.purchase_order);
	polRecord.query();
	while(polRecord.next()) {
		if(polRecord.status != 'canceled') {
			hasMoreActiveLines = true;
			break;
		}
	}
	
	//If all the lines have been cancelled, then cancel the PO
	if(!hasMoreActiveLines) {
		var poRecord = new GlideRecord('x_392987_eam_purchase_order');
		var result = poRecord.get(current.purchase_order);
		
		if(result && poRecord.status != 'canceled') {
			poRecord.status = 'canceled';
			poRecord.update();
			return true;
		}
	}
	
	return false;
}

//Received Purchase order, if all the line items has been cancelled
function checkReceivedPOLines() {
	var hasMorePendingLines = false;
	var polRecord = new GlideRecord('x_392987_eam_purchase_order_line_item');
	
	polRecord.addQuery('purchase_order', current.purchase_order);
	polRecord.query();
	while(polRecord.next()) {
		if(polRecord.status != 'received' && polRecord.status != 'canceled') {
			hasMorePendingLines = true;
			break;
		}
	}
	
	//If all the lines have been recieved, then mark the PO as recieved
	if(!hasMorePendingLines) {
		var poRecord = new GlideRecord('x_392987_eam_purchase_order');
		var result = poRecord.get(current.purchase_order);
		
		if(result && poRecord.status != 'received' && poRecord.status != 'canceled') {
			poRecord.status = 'received';
			//poRecord.received = new GlideDateTime();
			poRecord.update();
			return true;
		}
	}
	
	return false;
}]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-09-06 12:02:06</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>19a42bd02f7373000d355d372799b625</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Handle roll up states and assets removal</sys_name>
        <sys_overrides/>
        <sys_package display_value="Enterprise Asset Management" source="x_392987_eam">2cd717a8dbdb3300f318fbef2996195f</sys_package>
        <sys_policy/>
        <sys_scope display_value="Enterprise Asset Management">2cd717a8dbdb3300f318fbef2996195f</sys_scope>
        <sys_update_name>sys_script_19a42bd02f7373000d355d372799b625</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-09-06 12:04:15</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=19a42bd02f7373000d355d372799b625"/>
</record_update>
