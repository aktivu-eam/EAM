<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_392987_eam_transfer_order_line_item</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_392987_eam_transfer_order_line_item">statusCHANGESTO3^EQ<item endquery="false" field="status" goto="false" newquery="false" operator="CHANGESTO" or="false" value="3"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Update Stockroom Quantity</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	var toStockRoom = current.parts_transfer_order.to_stockroom;
	//update from and to stockroom quantities
	var fromStockroom = current.parts.getRefRecord();
	fromStockroom.quantity-=current.requested_quantity;
	fromStockroom.update();
	//updateDestinationStockRoomParts(toStockRoom,current.parts.parts,current.requested_quantity);
	//}
})(current, previous);

function updateDestinationStockRoomParts(stockroom,parts,quantity){
	var stockroomParts = new GlideRecord('x_392987_eam_m2m_stockrooms_parts');
	stockroomParts.addQuery("stockrooms",stockroom);
	stockroomParts.addQuery('parts',parts);
	stockroomParts.query();
	if(stockroomParts.next()){
		stockroomParts.quantity+=quantity;
		stockroomParts.update();
	}
	else{
		stockroomParts.initialize();
		stockroomParts.stockrooms = stockroom;
		stockroomParts.parts = parts;
		stockroomParts.quantity = quantity;
		stockroomParts.insert();
	}
}]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-09-06 10:39:38</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>c9e11f142f3373000d355d372799b6ba</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Update Stockroom Quantity</sys_name>
        <sys_overrides/>
        <sys_package display_value="Enterprise Asset Management" source="x_392987_eam">2cd717a8dbdb3300f318fbef2996195f</sys_package>
        <sys_policy/>
        <sys_scope display_value="Enterprise Asset Management">2cd717a8dbdb3300f318fbef2996195f</sys_scope>
        <sys_update_name>sys_script_c9e11f142f3373000d355d372799b6ba</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-09-06 10:39:38</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=c9e11f142f3373000d355d372799b6ba"/>
</record_update>
